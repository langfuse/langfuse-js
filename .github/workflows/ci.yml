name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, 20]
    name: Test on Node ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: yarn install
      - run: yarn test
  integration-test:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    env:
      LF_HOST: ${{ secrets.LF_HOST }}
      LF_SECRET_KEY: ${{ secrets.LF_SECRET_KEY }}
      LF_PUBLIC_KEY: ${{ secrets.LF_PUBLIC_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: yarn install
      - run: yarn compile
      - run: yarn test:integration
  lint:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: yarn install
      - run: yarn compile
      - run: yarn lint
      - run: yarn prettier:check
  all-tests-passed:
      # This allows us to have a branch protection rule for tests and deploys with matrix
    runs-on: ubuntu-latest
    needs: [tests, integration-test, lint]
    if: always()
    steps:
      - name: Successful deploy
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing deploy
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

