/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core/index.js";
import { mergeHeaders } from "./core/headers.js";
import { AnnotationQueues } from "./api/resources/annotationQueues/client/Client.js";
import { BlobStorageIntegrations } from "./api/resources/blobStorageIntegrations/client/Client.js";
import { Comments } from "./api/resources/comments/client/Client.js";
import { DatasetItems } from "./api/resources/datasetItems/client/Client.js";
import { DatasetRunItems } from "./api/resources/datasetRunItems/client/Client.js";
import { Datasets } from "./api/resources/datasets/client/Client.js";
import { Health } from "./api/resources/health/client/Client.js";
import { Ingestion } from "./api/resources/ingestion/client/Client.js";
import { LlmConnections } from "./api/resources/llmConnections/client/Client.js";
import { Media } from "./api/resources/media/client/Client.js";
import { Metrics } from "./api/resources/metrics/client/Client.js";
import { Models } from "./api/resources/models/client/Client.js";
import { Observations } from "./api/resources/observations/client/Client.js";
import { Organizations } from "./api/resources/organizations/client/Client.js";
import { Projects } from "./api/resources/projects/client/Client.js";
import { PromptVersion } from "./api/resources/promptVersion/client/Client.js";
import { Prompts } from "./api/resources/prompts/client/Client.js";
import { Scim } from "./api/resources/scim/client/Client.js";
import { ScoreConfigs } from "./api/resources/scoreConfigs/client/Client.js";
import { ScoreV2 } from "./api/resources/scoreV2/client/Client.js";
import { Score } from "./api/resources/score/client/Client.js";
import { Sessions } from "./api/resources/sessions/client/Client.js";
import { Trace } from "./api/resources/trace/client/Client.js";

export declare namespace LangfuseAPIClient {
  export interface Options {
    environment: core.Supplier<string>;
    /** Specify a custom URL to connect the client to. */
    baseUrl?: core.Supplier<string>;
    username?: core.Supplier<string | undefined>;
    password?: core.Supplier<string | undefined>;
    /** Override the X-Langfuse-Sdk-Name header */
    xLangfuseSdkName?: core.Supplier<string | undefined>;
    /** Override the X-Langfuse-Sdk-Version header */
    xLangfuseSdkVersion?: core.Supplier<string | undefined>;
    /** Override the X-Langfuse-Public-Key header */
    xLangfusePublicKey?: core.Supplier<string | undefined>;
    /** Additional headers to include in requests. */
    headers?: Record<
      string,
      string | core.Supplier<string | undefined> | undefined
    >;
  }

  export interface RequestOptions {
    /** The maximum time to wait for a response in seconds. */
    timeoutInSeconds?: number;
    /** The number of times to retry the request. Defaults to 2. */
    maxRetries?: number;
    /** A hook to abort the request. */
    abortSignal?: AbortSignal;
    /** Override the X-Langfuse-Sdk-Name header */
    xLangfuseSdkName?: string | undefined;
    /** Override the X-Langfuse-Sdk-Version header */
    xLangfuseSdkVersion?: string | undefined;
    /** Override the X-Langfuse-Public-Key header */
    xLangfusePublicKey?: string | undefined;
    /** Additional query string parameters to include in the request. */
    queryParams?: Record<string, unknown>;
    /** Additional headers to include in the request. */
    headers?: Record<
      string,
      string | core.Supplier<string | undefined> | undefined
    >;
  }
}

export class LangfuseAPIClient {
  protected readonly _options: LangfuseAPIClient.Options;
  protected _annotationQueues: AnnotationQueues | undefined;
  protected _blobStorageIntegrations: BlobStorageIntegrations | undefined;
  protected _comments: Comments | undefined;
  protected _datasetItems: DatasetItems | undefined;
  protected _datasetRunItems: DatasetRunItems | undefined;
  protected _datasets: Datasets | undefined;
  protected _health: Health | undefined;
  protected _ingestion: Ingestion | undefined;
  protected _llmConnections: LlmConnections | undefined;
  protected _media: Media | undefined;
  protected _metrics: Metrics | undefined;
  protected _models: Models | undefined;
  protected _observations: Observations | undefined;
  protected _organizations: Organizations | undefined;
  protected _projects: Projects | undefined;
  protected _promptVersion: PromptVersion | undefined;
  protected _prompts: Prompts | undefined;
  protected _scim: Scim | undefined;
  protected _scoreConfigs: ScoreConfigs | undefined;
  protected _scoreV2: ScoreV2 | undefined;
  protected _score: Score | undefined;
  protected _sessions: Sessions | undefined;
  protected _trace: Trace | undefined;

  constructor(_options: LangfuseAPIClient.Options) {
    this._options = {
      ..._options,
      headers: mergeHeaders(
        {
          "X-Langfuse-Sdk-Name": _options?.xLangfuseSdkName,
          "X-Langfuse-Sdk-Version": _options?.xLangfuseSdkVersion,
          "X-Langfuse-Public-Key": _options?.xLangfusePublicKey,
        },
        _options?.headers,
      ),
    };
  }

  public get annotationQueues(): AnnotationQueues {
    return (this._annotationQueues ??= new AnnotationQueues(this._options));
  }

  public get blobStorageIntegrations(): BlobStorageIntegrations {
    return (this._blobStorageIntegrations ??= new BlobStorageIntegrations(
      this._options,
    ));
  }

  public get comments(): Comments {
    return (this._comments ??= new Comments(this._options));
  }

  public get datasetItems(): DatasetItems {
    return (this._datasetItems ??= new DatasetItems(this._options));
  }

  public get datasetRunItems(): DatasetRunItems {
    return (this._datasetRunItems ??= new DatasetRunItems(this._options));
  }

  public get datasets(): Datasets {
    return (this._datasets ??= new Datasets(this._options));
  }

  public get health(): Health {
    return (this._health ??= new Health(this._options));
  }

  public get ingestion(): Ingestion {
    return (this._ingestion ??= new Ingestion(this._options));
  }

  public get llmConnections(): LlmConnections {
    return (this._llmConnections ??= new LlmConnections(this._options));
  }

  public get media(): Media {
    return (this._media ??= new Media(this._options));
  }

  public get metrics(): Metrics {
    return (this._metrics ??= new Metrics(this._options));
  }

  public get models(): Models {
    return (this._models ??= new Models(this._options));
  }

  public get observations(): Observations {
    return (this._observations ??= new Observations(this._options));
  }

  public get organizations(): Organizations {
    return (this._organizations ??= new Organizations(this._options));
  }

  public get projects(): Projects {
    return (this._projects ??= new Projects(this._options));
  }

  public get promptVersion(): PromptVersion {
    return (this._promptVersion ??= new PromptVersion(this._options));
  }

  public get prompts(): Prompts {
    return (this._prompts ??= new Prompts(this._options));
  }

  public get scim(): Scim {
    return (this._scim ??= new Scim(this._options));
  }

  public get scoreConfigs(): ScoreConfigs {
    return (this._scoreConfigs ??= new ScoreConfigs(this._options));
  }

  public get scoreV2(): ScoreV2 {
    return (this._scoreV2 ??= new ScoreV2(this._options));
  }

  public get score(): Score {
    return (this._score ??= new Score(this._options));
  }

  public get sessions(): Sessions {
    return (this._sessions ??= new Sessions(this._options));
  }

  public get trace(): Trace {
    return (this._trace ??= new Trace(this._options));
  }
}
